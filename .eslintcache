[{"/home/ravi/Documents/reactProjects/ctk-client/src/index.js":"1","/home/ravi/Documents/reactProjects/ctk-client/src/reportWebVitals.js":"2","/home/ravi/Documents/reactProjects/ctk-client/src/App.js":"3","/home/ravi/Documents/reactProjects/ctk-client/src/constants/index.js":"4","/home/ravi/Documents/reactProjects/ctk-client/src/containers/HomeContainer/index.js":"5","/home/ravi/Documents/reactProjects/ctk-client/src/containers/BlogContainer/index.js":"6","/home/ravi/Documents/reactProjects/ctk-client/src/containers/WisdomContainer/index.js":"7","/home/ravi/Documents/reactProjects/ctk-client/src/containers/ContactUsContainer/index.js":"8","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangRegListContainer/index.js":"9","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangContainer/index.js":"10","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangVolunteerContainer/index.js":"11","/home/ravi/Documents/reactProjects/ctk-client/src/components/Footer/index.js":"12","/home/ravi/Documents/reactProjects/ctk-client/src/constants/colors.js":"13","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangRegListContainer/constants.js":"14","/home/ravi/Documents/reactProjects/ctk-client/src/services/umang.js":"15","/home/ravi/Documents/reactProjects/ctk-client/src/services/index.js":"16","/home/ravi/Documents/reactProjects/ctk-client/src/components/Header/index.js":"17","/home/ravi/Documents/reactProjects/ctk-client/src/components/RoundBtn/index.js":"18","/home/ravi/Documents/reactProjects/ctk-client/src/components/Banner/index.js":"19","/home/ravi/Documents/reactProjects/ctk-client/src/components/Input/index.js":"20"},{"size":500,"mtime":1626901182243,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1626901182243,"results":"23","hashOfConfig":"22"},{"size":1020,"mtime":1626902147679,"results":"24","hashOfConfig":"22"},{"size":509,"mtime":1611567027777,"results":"25","hashOfConfig":"22"},{"size":15129,"mtime":1607508354823,"results":"26","hashOfConfig":"27"},{"size":2384,"mtime":1607507162759,"results":"28","hashOfConfig":"27"},{"size":16670,"mtime":1607514344620,"results":"29","hashOfConfig":"27"},{"size":2819,"mtime":1607514897268,"results":"30","hashOfConfig":"27"},{"size":9994,"mtime":1611908223974,"results":"31","hashOfConfig":"22"},{"size":9982,"mtime":1626902267506,"results":"32","hashOfConfig":"22"},{"size":7006,"mtime":1611601266852,"results":"33","hashOfConfig":"22"},{"size":2126,"mtime":1625759182304,"results":"34","hashOfConfig":"22"},{"size":198,"mtime":1607247472248,"results":"35","hashOfConfig":"22"},{"size":1744,"mtime":1611600388496,"results":"36","hashOfConfig":"22"},{"size":787,"mtime":1611571254116,"results":"37","hashOfConfig":"22"},{"size":244,"mtime":1607509429750,"results":"38","hashOfConfig":"27"},{"size":2330,"mtime":1607366399614,"results":"39","hashOfConfig":"27"},{"size":2852,"mtime":1607508306163,"results":"40","hashOfConfig":"22"},{"size":681,"mtime":1607155119552,"results":"41","hashOfConfig":"27"},{"size":4998,"mtime":1610158354522,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oac36a",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1uhjgba",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/home/ravi/Documents/reactProjects/ctk-client/src/index.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/reportWebVitals.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/App.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/constants/index.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/containers/HomeContainer/index.js",["91","92","93","94","95","96","97","98","99"],"/home/ravi/Documents/reactProjects/ctk-client/src/containers/BlogContainer/index.js",[],["100","101"],"/home/ravi/Documents/reactProjects/ctk-client/src/containers/WisdomContainer/index.js",["102","103","104","105","106","107"],"import React from 'react';\nimport Banner from '../../components/Banner';\nimport Header from '../../components/Header';\nimport RoundBtn from '../../components/RoundBtn';\nimport Input from '../../components/Input';\nimport bgEnglish from '../../assets/images/bg-english.png';\nimport wideBgEn from '../../assets/images/1606879754.png';\nimport wideBgHi from '../../assets/images/1606995529.png';\nimport certificate from '../../assets/images/certificate.jpg';\nimport meet from '../../assets/images/meet.jpg';\nimport fest from '../../assets/images/fest.png';\nimport COLORS from '../../constants/colors';\nimport motivation from '../../assets/images/josh-hild-jdTdvF6fDus-unsplash.jpg';\nimport { subscribe } from '../../services';\nimport './style.scss';\n\nconst LANGUAGES = {\n    HINDI: 'hindi',\n    ENGLISH: 'english',\n}\n\nclass WisdomContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedBook: LANGUAGES.HINDI,\n            formData: {\n                firstName: '',\n                lastName: '',\n                email: '',\n                whatsapp: '',\n                dob: '',\n                gender: 'MALE',\n                address: '',\n                city: '',\n                pincode: '',\n                book: 'Hindi Bhagavad Gita',\n                screenshot: '',\n                confirmation: false,\n            },\n            subscribeForm: {\n                name: '',\n                email: '',\n                contact: '',\n            }\n        }\n    }\n\n    bookSelector = (lang) => {\n        this.setState({\n            selectedBook: lang,\n        })\n    }\n\n    subscribe = () => {\n        const {\n            subscribeForm,\n        } = this.state;\n        if (subscribeForm && subscribeForm.name && subscribeForm.email && subscribeForm.contact) {\n            subscribe({\n                timeStamp: new Date(),\n                ...subscribeForm,\n            }).then((res) => {\n                this.setState({\n                    subscribeForm: {\n                        name: '',\n                        email: '',\n                        contact: '',\n                    }\n                })\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    setFormData = (name, value) => {\n        const {\n            formData\n        } = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [name]: value\n            }\n        })\n    }\n\n    setSubscribeForm = (name, value) => {\n        const {\n            subscribeForm,\n        } = this.state;\n        this.setState({\n            subscribeForm: {\n                ...subscribeForm,\n                [name]: value,\n            }\n        })\n    }\n\n    render() {\n        const {\n            selectedBook,\n            subscribeForm: {\n                name,\n                email,\n                contact,\n            }\n        } = this.state;\n\n        return (\n            <div className=\"wisdom-container\">\n                <Header navLinks={[\n                    { label: 'What\\'s included', path: '#included-section' },\n                    { label: 'Motivation', path: '#motivation-section' },\n                    { label: 'Pricing', path: '#pricing-section' },\n                ]} />\n                <Banner\n                    color={COLORS.BLACK}\n                    image=\"https://res.cloudinary.com/dnuq1lgqs/image/upload/v1607155865/bg/Rectangle_25_koobtz.jpg\"\n                    title=\"Wisdom Batch '21\"\n                />\n                <div id=\"included-section\">\n                    <div className=\"heading bold\">What's included?</div>\n                    <div className=\"cards\">\n                        <div className=\"card left\">\n                            <img src={bgEnglish} />\n                            <div className=\"text\">\n                                <p>We all face challenges and dilemmas in our life. Dilemma not just between what is wrong and what is right, but also what is right and the rightest. Our uncontrolled Mind tricks us presenting the former as good to go while leaving the latter one.</p>\n                                <p>What did Krishna told Arjuna in <span className=\"bold\">Bhagavad Gita</span>? How would Arjuna find out the distinction between right and the wrong? Would he have the courage to implement what he was told? Find out while reading this masterpiece!</p>\n                            </div>\n                        </div>\n                        <div className=\"card right\">\n                            <img src={certificate} />\n                            <div className=\"text\">\n                                <p>It is tough to grasp every single bit of this masterpiece knowledge about life. Don’t worry, we’ve got you covered with our <span className=\"bold\">certified Life Manual Course</span>.</p>\n                                <p>This Course would cover essential topics of Bhagavad Gita, and an instructor is provided to you, so that you can ask more practical questions and raise your doubts about life.</p>\n                            </div>\n                        </div>\n                        <div className=\"card left\">\n                            <img src={fest} />\n                            <div className=\"text\">\n                                <p>Who doesn’t like festivals? Yes, you’ve heard it right. We’re bringing second edition of <span className=\"bold\">Mega Youth Fest</span> on January 2021. </p>\n                                <p>This Fest would lift not just your wisdom, but your soul, mind and of course your body. The complete package of edutainment is back once again to be unravelled!</p>\n                            </div>\n                        </div>\n                        <div className=\"card right\">\n                            <img src={meet} />\n                            <div className=\"text\">\n                                <p>Continuous efforts are easily ensured with the help of a community. Our Community of 1000+ youths under the expert guidance of different leaders is here to help you make a change in the society.</p>\n                                <p>Get <span className=\"bold\">youth membership alongwith expert facilitation</span> which would provide practical tricks to overcome the bad and develop the good.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"motivation-section\">\n                    <div className=\"heading bold\">Motivation</div>\n                    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/k1Ktre8WIe8\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                </div>\n                <div id=\"pricing-section\">\n                    <div className=\"banner\" style={{ background: `url(${motivation}) center center/cover no-repeat` }}>\n                        <div className=\"motivation\">\n                            <p className=\"quote\">\n                                The best investment you can make is in yourself.\n                            </p>\n                            <p className=\"author\">\n                                WARREN BUFFET\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"heading bold\">Pricing</div>\n                        <div className=\"btn-group\">\n                            <RoundBtn\n                                className=\"btn selector-btn\"\n                                onClick={() => this.bookSelector(LANGUAGES.HINDI)}\n                                outlineColor={COLORS.YELLOW}\n                                textColor={selectedBook === LANGUAGES.HINDI ? COLORS.WHITE : COLORS.YELLOW}\n                                bgColor={selectedBook === LANGUAGES.HINDI ? COLORS.YELLOW : COLORS.WHITE}\n                                hoverBgColor={COLORS.YELLOW}\n                                hoverTextColor={COLORS.WHITE}\n                                outlinePt={2}\n                            >\n                                Hindi\n                            </RoundBtn>\n                            <RoundBtn\n                                className=\"btn selector-btn\"\n                                onClick={() => this.bookSelector(LANGUAGES.ENGLISH)}\n                                outlineColor={COLORS.YELLOW}\n                                textColor={selectedBook === LANGUAGES.ENGLISH ? COLORS.WHITE : COLORS.YELLOW}\n                                bgColor={selectedBook === LANGUAGES.ENGLISH ? COLORS.YELLOW : COLORS.WHITE}\n                                hoverBgColor={COLORS.YELLOW}\n                                hoverTextColor={COLORS.WHITE}\n                                outlinePt={2}\n                            >\n                                English\n                            </RoundBtn>\n                        </div>\n                        <div className=\"price-info\">\n                            <img className=\"book-container\" src={selectedBook === LANGUAGES.HINDI ? wideBgHi : wideBgEn} />\n                            <div className=\"details\">\n                                <p>Bhagavad Gita worth ₹ {selectedBook === LANGUAGES.HINDI ? '199' : '220'} </p>\n                                <p>+ Delivery Charges ₹ 50 </p>\n                                <p>+ Mega Youth Fest ticket ₹ 149</p>\n                                <p>+ Video courses and Life Mentorship</p>\n                                <p className=\"cost\">₹ {selectedBook === LANGUAGES.HINDI ? '190' : '220'}/-</p>\n                                <a\n                                    href={\n                                        selectedBook === LANGUAGES.HINDI \n                                        ? 'https://www.payumoney.com/paybypayumoney/#/299B7BB3820BB7318ACF157A4ADF639B'\n                                        : 'https://www.payumoney.com/paybypayumoney/#/1C8EA6A6EEC2F1BF7ADC6E38EA3D7CBF'\n                                    }>\n                                    <RoundBtn className=\"btn\">\n                                    {\n                                        selectedBook === LANGUAGES.HINDI \n                                        ? 'Enroll with Hindi Gita'\n                                        : 'Enroll with English Gita'\n                                    }\n                                    </RoundBtn>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* <div id=\"enroll-form\">\n                    <div className=\"heading bold\">Enrollment Form</div>\n                    <div className=\"form\">\n                        <Input\n                            placeholder={'First Name'}\n                            setValue={this.setFormData}\n                            value={firstName}\n                            name=\"firstName\"\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Last Name'}\n                            setValue={this.setFormData}\n                            value={lastName}\n                            name=\"lastName\"\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Email'}\n                            setValue={this.setFormData}\n                            value={email}\n                            name=\"email\"\n                            className=\"half input\"\n                            test={/\\S+@\\S+\\.\\S+/}\n                            required\n                        />\n                        <Input\n                            placeholder={'Whatsapp'}\n                            setValue={this.setFormData}\n                            value={whatsapp}\n                            name=\"whatsapp\"\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Date of Birth'}\n                            setValue={this.setFormData}\n                            value={dob}\n                            name=\"dob\"\n                            type=\"date\"\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Gender'}\n                            setValue={this.setFormData}\n                            value={gender}\n                            name=\"gender\"\n                            type=\"select\"\n                            options={['MALE', 'FEMALE']}\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Bhagavad Gita Shipping Address'}\n                            setValue={this.setFormData}\n                            value={address}\n                            name=\"address\"\n                            className=\"full input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'City'}\n                            setValue={this.setFormData}\n                            value={city}\n                            name=\"city\"\n                            className=\"half input\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Pincode'}\n                            setValue={this.setFormData}\n                            value={pincode}\n                            name=\"pincode\"\n                            className=\"half input\"\n                            maxlength={6}\n                            type={'number'}\n                            required\n                        />\n                        <Input\n                            setValue={this.setFormData}\n                            value={book}\n                            name=\"book\"\n                            options={[\n                                'Hindi Bhagavad Gita',\n                                'English Bhagavad Gita'\n                            ]}\n                            type=\"radio\"\n                            className=\"half input\"\n                            required\n                        />\n                        <p className=\"message\">Please Pay <span className=\"bold\">₹ {book === 'Hindi Bhagavad Gita' ? 190 : 220}</span> through Paytm/PhonePay/Google Pay at 9953522058 or UPI at ravi97garg@okicici for enrolling for the Batch. On verification, You would receive an email and further details.</p>\n                        <button onClick={this.payNow}>\n                            Pay Now\n                        </button>\n                    </div>\n                </div> */}\n                <div className=\"action-footer\">\n                    <div className=\"message\">Get our updates delivered right into your Inbox</div>\n                    <div className=\"subscribe-form\">\n                        <Input\n                            placeholder={'Name'}\n                            setValue={this.setSubscribeForm}\n                            value={name}\n                            name=\"name\"\n                            required\n                        />\n                        <Input\n                            placeholder={'Email'}\n                            setValue={this.setSubscribeForm}\n                            value={email}\n                            name=\"email\"\n                            test={/\\S+@\\S+\\.\\S+/}\n                            required\n                        />\n                        <Input\n                            placeholder={'Contact'}\n                            setValue={this.setSubscribeForm}\n                            value={contact}\n                            name=\"contact\"\n                            maxlength={10}\n                            type={'number'}\n                            required\n                        />\n                        <button onClick={this.subscribe}>Subscribe</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WisdomContainer;","/home/ravi/Documents/reactProjects/ctk-client/src/containers/ContactUsContainer/index.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangRegListContainer/index.js",["108","109","110","111"],"import React, { Component } from \"react\";\nimport DataTable, { createTheme, memoize } from 'react-data-table-component';\nimport { fetchAllRegistrations, markAttendance, updateUser } from \"../../services/umang\";\nimport { COLUMNS } from \"./constants\";\nimport \"./style.scss\";\n\nclass UmangRegListContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            filteredData: [],\n            searchText: '',\n            editPopup: null,\n            viewPopup: null,\n        };\n    }\n    componentDidMount() {\n        fetchAllRegistrations()\n            .then((res) => {\n                this.setState({\n                    data: res.data.map(reg => ({ ...reg, registeredOn: new Date(reg.registeredOn).toDateString() })),\n                })\n            })\n            .catch(err => {\n                alert(\"Error:\", err.message);\n            })\n    }\n\n    convertArrayOfObjectsToCSV = (array) => {\n        let result;\n\n        const columnDelimiter = ',';\n        const lineDelimiter = '\\n';\n        // const keys = Object.keys(data[0]);\n        const names = COLUMNS(() => {}, false).map(e => e.name).slice(0, -1);\n        const keys = COLUMNS(() => {}, false).map(e => e.selector).slice(0, -1);\n\n        result = '';\n        result += names.join(columnDelimiter);\n        result += lineDelimiter;\n\n        array.forEach(item => {\n            let ctr = 0;\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter;\n\n                result += item[key].toString().replace(',', '.');\n\n                ctr++;\n            });\n            result += lineDelimiter;\n        });\n\n        return result;\n    }\n\n    // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\n    downloadCSV = (array) => {\n        // const link = document.createElement('a');\n        let csv = this.convertArrayOfObjectsToCSV(array);\n        if (csv == null) return;\n\n        const filename = 'export.csv';\n\n        if (!csv.match(/^data:text\\/csv/i)) {\n            csv = `data:text/csv;charset=utf-8,${csv}`;\n        }\n\n        this.exportRef.setAttribute('href', encodeURI(csv));\n        this.exportRef.setAttribute('download', filename);\n        // this.exportRef.click();\n    }\n\n    onSearch = (e) => {\n        const {\n            data\n        } = this.state;\n        const value = e.target.value;\n        const lowered = value && value.toLowerCase();\n        this.setState({\n            filteredData: data.filter(participant => {\n                return (\n                    (participant.registrationCode.toLowerCase()).includes(lowered)\n                    || (participant.name.toLowerCase()).includes(lowered)\n                    || (participant.email.toLowerCase()).includes(lowered)\n                    || (participant.contact.toString().toLowerCase()).includes(lowered)\n                    || (participant.registeredBy.toLowerCase()).includes(lowered)\n                )\n            }),\n            searchText: value,\n        })\n    }\n\n    handleButtonClick = (type, row) => {\n        switch (type) {\n            case 'edit': {\n                this.setState({ editPopup: row });\n                break;\n            }\n            case 'view': {\n                this.setState({ viewPopup: row });\n                break;\n            }\n            case 'attend': {\n                this.setState({disabled: true})\n                markAttendance(row.id, !row.isPresent)\n                    .then((res) => {\n                        const updatedData = this.state.data.map(participant => {\n                            if (participant.id === row.id) {\n                                participant.isPresent = !row.isPresent\n                            }\n                            return participant;\n                        });\n                        this.setState({\n                            data: updatedData,\n                            disabled: false,\n                        })\n                    }).catch(err => {\n                        this.setState({disabled: false})\n                        alert(err.message);\n                    })\n            }\n            default:\n        }\n    }\n\n    sendUpdateRequest = () => {\n        const {\n            editPopup: {\n                id,\n                name,\n                email,\n                contact,\n                moneyPaid,\n                remarks,\n                withBhagavadGita,\n                location,\n                registeredBy,\n                institute,\n            },\n        } = this.state;\n        updateUser({\n            id,\n            name,\n            email,\n            contact,\n            location,\n            remarks,\n            withBhagavadGita,\n            moneyPaid,\n            registeredBy,\n            institute,\n        }).then((res) => {\n            const updatedData = this.state.data.map(participant => {\n                if (participant.id === id) {\n                    participant.name = name;\n                    participant.email = email;\n                    participant.contact = contact;\n                    participant.moneyPaid = moneyPaid;\n                    participant.registeredBy = registeredBy;\n                    participant.institute = institute;\n                }\n                return participant;\n            });\n            this.setState({\n                data: updatedData,\n                editPopup: null,\n            })\n        }).catch(err => {\n            alert(err.message);\n            this.setState({\n                editPopup: null,\n            })\n        })\n    }\n\n    render() {\n        const {\n            data,\n            searchText,\n            filteredData,\n            editPopup,\n            viewPopup,\n            disabled,\n        } = this.state;\n        return (\n            <div className=\"reg-list-container\">\n                <div className=\"header-bar\">\n                    <a ref={(ref) => { this.exportRef = ref; }} onClick={() => this.downloadCSV(data)}><button>Export to CSV</button></a>\n                    <input autoComplete=\"off\" id=\"search\" type=\"text\" placeholder=\"Search by Ticket ID / Name/ Email / Phone number\" aria-label=\"Search Input\" value={searchText} onChange={this.onSearch} />\n                </div>\n                <DataTable\n                    title=\"All Umang Registrations\"\n                    columns={COLUMNS(this.handleButtonClick, disabled)}\n                    data={searchText.length ? filteredData : data}\n                    pagination\n                    selectableRows\n                    dense\n                />\n                {editPopup && <div className=\"popup-outer\" onClick={() => {this.setState({ editPopup: null })}}>\n                    <div className=\"popup-inner\" onClick={(e) => {e.stopPropagation()}}>\n                        <ul className=\"edit-sheet\">\n                            <li>Name<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.name}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, name: e.target.value}})}}/>\n                            </b></li>\n                            <li>Email<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.email}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, email: e.target.value}})}}/>\n                            </b></li>\n                            <li>Contact<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.contact}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, contact: e.target.value}})}}/>\n                            </b></li>\n                            <li>Money Paid<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.moneyPaid}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, moneyPaid: e.target.value}})}}/>\n                            </b></li>\n                            <li>Institute<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.institute}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, institute: e.target.value}})}}/>\n                            </b></li>\n                            <li>Registered By<br /><b>\n                                <input autoComplete=\"off\" value={editPopup.registeredBy}\n                                onChange={(e) => {this.setState({editPopup: {...editPopup, registeredBy: e.target.value}})}}/>\n                            </b></li>\n                        </ul>\n                        <button onClick={this.sendUpdateRequest}>UPDATE</button>\n                    </div>\n                </div>}\n                {viewPopup && <div className=\"popup-outer\" onClick={() => this.setState({ viewPopup: null })}>\n                    <div className=\"popup-inner\" onClick={(e) => {e.stopPropagation()}}>\n                        <ul className=\"view-sheet\">\n                            <li>Ticket ID: <b>{viewPopup.registrationCode}</b></li>\n                            <li>Name: <b>{viewPopup.name}</b></li>\n                            <li>Email: <b>{viewPopup.email}</b></li>\n                            <li>Contact: <b>{viewPopup.contact}</b></li>\n                            <li>Registered by: <b>{viewPopup.registeredBy}</b></li>\n                            <li>With Bhagavad Gita: <b>{viewPopup.withBhagavadGita ? 'YES' : 'NO'}</b></li>\n                            <li>Money left to be paid: <b>Rs. {viewPopup.moneyLeftToBePaid}</b></li>\n                            <li>Remarks: <b>{viewPopup.remarks}</b></li>\n                            <li>Institute: <b>{viewPopup.institute}</b></li>\n                            <li>Registered on: <b>{viewPopup.registeredOn}</b></li>\n                        </ul>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default UmangRegListContainer;","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangContainer/index.js",["112","113","114","115","116"],"import React from 'react';\nimport RoundBtn from '../../components/RoundBtn';\nimport './style.scss';\n\nclass UmangContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"umang-landing-page\">\n                <div className=\"banner\">\n                    {/* <iframe id=\"video_background_video_0_yt\" allowFullScreen=\"allowfullscreen\" width=\"1284\" height=\"723\" src=\"https://www.youtube.com/embed/9a5a4n54gJU?enablejsapi=1&amp;loop=1&amp;start=0&amp;autoplay=1&amp;controls=0&amp;showinfo=0&amp;wmode=transparent&amp;iv_load_policy=3&amp;modestbranding=1&amp;rel=0&amp;mute=1&amp;playlist=9a5a4n54gJU\" frameBorder=\"0\" ></iframe> */}\n                    <video className=\"umang-bg-video\" autoPlay muted width=\"100%\" loop>\n                        <source src={'https://res.cloudinary.com/dnuq1lgqs/video/upload/v1610357653/Umang_y3rb3k.mp4'} type=\"video/mp4\" />\n                        Your browser does not support HTML5 video.\n                    </video>\n                    <div className=\"banner-overlay\">\n                        <div className=\"title\">UMANG</div>\n                        <div className=\"line-1\">Festival of Goodness and Joy</div>\n                        <div className=\"line-2\">15 August 2021 / ISKCON GHAZIABAD / 3 PM ONWARDS</div>\n                        <a href=\"https://www.payu.in/events/#/buyTickets/umang2021\"\n                            target=\"_blank\">\n                            <RoundBtn\n                                bgColor=\"#FFFFFF\"\n                                textColor=\"#222222\"\n                            >\n                                REGISTER NOW\n                            </RoundBtn>\n                        </a>\n                    </div>\n                </div>\n                <div className=\"about-container\">\n                    <div className=\"about-1\">\n                        <div className=\"title\">\n                            About the Fest\n                        </div>\n                        <div className=\"desc\">\n                            <p>UMANG - A Festival of inspiration and Joy is a Youth Festival conducted regularly by ISKCON Youth Forum all over India. This festival provides a platform for the Spiritually inclined Youth to assemble at a common ground.</p>\n                            <p>The festival is surcharged with spiritual energy which manifests in the form of Excellent Ecstatic Mantra Rock, Wonderful Play, Powerful Thought Provoking Seminar.</p>\n                        </div>\n                    </div>\n                    <div className=\"about-2\">\n                        <div className=\"details\">\n                            <div className=\"heading\">THEME</div>\n                            <div className=\"detail\">Restoring the Glories of India</div>\n                            <div className=\"heading\">WHERE</div>\n                            <div className=\"detail\"><a href=\"https://goo.gl/maps/VRvoocp5mfuYDFKD8\" target=\"_blank\">ISKCON GHAZIABAD</a></div>\n                            <div className=\"heading\">WHEN</div>\n                            <div className=\"detail\">Republic Day, 26th January 2021</div>\n                        </div>\n                        <div className=\"poster\">\n                            <img src=\"https://res.cloudinary.com/dnuq1lgqs/image/upload/v1610361682/UMANG_izkbiv.jpg\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"event-container\">\n                    <div className=\"title\">Events.</div>\n                    <div className=\"event-cards\">\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://iyfdelhi.com/umang/wp-content/uploads/2020/07/Seminar.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Enlightening Talk</div>\n                                <div className=\"desc-1\">HG Sundar Gopal Das</div>\n                                <div className=\"desc-2\">Director, ISKCON Youth Forum</div>\n                                <div className=\"desc-2\">M. Tech. IIT Delhi</div>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://res.cloudinary.com/dnuq1lgqs/image/upload/v1610436595/couple-winning-prize-man-woman-holding-gift-box-flat-vector-illustration-lottery-present-birthday-party_74855-8307_hl29hl.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Talent Hunt</div>\n                                <div className=\"desc-2\">Submit your Talent Hunt Entry</div>\n                                <div className=\"desc-2\">and Win Exciting Prizes</div>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://iyfdelhi.com/umang/wp-content/uploads/2020/07/Drama.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Thetrical Performance</div>\n                                <div className=\"desc-2\">Me and My Mind</div>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://res.cloudinary.com/dnuq1lgqs/image/upload/v1610437180/headway-5QgIuuBxKwM-unsplash_1_dl1n31.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Panel Discussion</div>\n                                <div className=\"desc-2\">Glories of INDIA</div>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://iyfdelhi.com/umang/wp-content/uploads/2020/07/Rock-Kirtan.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Mantra Rock Dance</div>\n                                <div className=\"desc-2\">Mesmerize yourself in Melodious Chants</div>\n                            </div>\n                        </div>\n                        <div className=\"card\" style={{\n                            background: `linear-gradient(180deg, #1d2152aa 80%, #1d2152aa 80%) no-repeat, url('https://iyfdelhi.com/umang/wp-content/uploads/2020/07/Rock-Show.jpg') center center/cover no-repeat`\n                        }}>\n                            <div className=\"detail\">\n                                <div className=\"heading\">Lots of Fun</div>\n                                <div className=\"desc-2\">Music! Dance! FOOD!!</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"fest-details\">\n                    <div className=\"part\">\n                        <div className=\"up-title\">THEME</div>\n                        <div className=\"title\">\n                            Restoring the Glories of India\n                        </div>\n                        <p className=\"para\">\n                            Once titled Golden Bird, Vishwa Guru, India has now come way ahead only to realize that the paradise is lost. The countless glories that embellished Indian historical era are now a part of textbooks only. Let us become instrumental in excavating and reviving the lost grandeur of our ancient tradition. Let us discover, understand, preserve and promote the glories of Vedic Culture.\n                        </p>\n                    </div>\n                    <div className=\"part poster\">\n                        <img src=\"https://iyfdelhi.com/umang/wp-content/uploads/2020/10/Confuse.jpg\" />\n                    </div>\n                </div>\n                <div className=\"action-container\">\n                    <div className=\"plate-1\">\n                        <div className=\"title\">Grab your ticket now!</div>\n                        <p className=\"grey\">Dont miss this Great oppurtunity unless you will miss yourself.</p>\n                        <p className=\"grey\">Registration ends on 01st November 2020.</p>\n                        <p className=\"red\">Hurry! Limited Seats!</p>\n                    </div>\n                    <div className=\"plate-2\">\n                        <div className=\"heading\">Full Access</div>\n                        <div className=\"price\">₹100/-</div>\n                        <ul className=\"features\">\n                            <li>Seminar</li>\n                            <li>Debate</li>\n                            <li>Talent Hunt</li>\n                            <li>Mantra Rock Show</li>\n                            <li>Theatre</li>\n                            <li>Dinner Buffet</li>\n                        </ul>\n                        <a href=\"https://www.payumoney.com/events/#/buyTickets/umang\"\n                            target=\"_blank\"\n                            className=\"purchase\">\n                            <button>\n                                Purchase Ticket\n                            </button>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UmangContainer;","/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangVolunteerContainer/index.js",["117"],"import React from 'react';\nimport Input from '../../components/Input';\nimport RoundBtn from '../../components/RoundBtn';\nimport { createNewRegistration, fetchVolunteerList } from '../../services/umang';\nimport COLORS from '../../constants/colors';\nimport './style.scss';\n\nclass UmangVolunteerContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            contact: '',\n            location: '',\n            remarks: '',\n            withBhagavadGita: false,\n            moneyPaid: '',\n            registeredBy: '0',\n            registeredBy2: undefined,\n            volunteers: ['OTHER'],\n            institute: '',\n        }\n    }\n\n    componentDidMount = () => {\n        fetchVolunteerList().then(res => {\n            const volunteers = res.data;\n            this.setState({\n                volunteers: [...volunteers, 'OTHER'],\n            });\n        });\n    }\n\n    setFormData = (name, value) => {\n        if (name === 'registeredBy' && value === 'OTHER') {\n            this.setState({\n                registeredBy2: '',\n                [name]: value,\n            });\n        } else {\n            this.setState({\n                [name]: value,\n            });\n        }\n    }\n    register = () => {\n        const {\n            name,\n            email,\n            contact,\n            location,\n            registeredBy,\n            registeredBy2,\n            volunteers,\n            remarks,\n            withBhagavadGita,\n            moneyPaid,\n            institute,\n        } = this.state;\n        if (name\n            && email\n            && contact\n            && location\n            && registeredBy\n            && ((registeredBy === 'OTHER' && registeredBy2) || registeredBy !== 'OTHER')) {\n            createNewRegistration({\n                name,\n                email,\n                contact,\n                location,\n                remarks,\n                withBhagavadGita,\n                moneyPaid: moneyPaid || 0,\n                registeredBy: registeredBy2 || registeredBy,\n                registeredBy2: undefined,\n                institute,\n            }).then(res => {\n                this.setState({\n                    name: '',\n                    email: '',\n                    contact: '',\n                    location: '',\n                    remarks: '',\n                    withBhagavadGita: false,\n                    moneyPaid: '',\n                    registeredBy: '0',\n                    registeredBy2: undefined,\n                    institute: '',\n                });\n                alert(res.data);\n            }).catch(e => {\n                alert(\"Error:\", e.message);\n            })\n        } else {\n            alert(\"Please fill details\");\n        }\n    }\n\n    render() {\n        const {\n            name,\n            email,\n            contact,\n            location,\n            registeredBy,\n            registeredBy2,\n            volunteers,\n            remarks,\n            moneyPaid,\n            withBhagavadGita,\n            institute,\n        } = this.state;\n        return (\n            <div className=\"umang-container\">\n                <h1>UMANG REGISTRATION</h1>\n                <div className=\"form\">\n                    <Input\n                        placeholder={'Name'}\n                        setValue={this.setFormData}\n                        value={name}\n                        name=\"name\"\n                        required\n                    />\n                    <Input\n                        placeholder={'Contact'}\n                        setValue={this.setFormData}\n                        value={contact}\n                        name=\"contact\"\n                        type=\"number\"\n                        maxLength=\"10\"\n                        required\n                    />\n                    <Input\n                        placeholder={'Email'}\n                        setValue={this.setFormData}\n                        value={email}\n                        name=\"email\"\n                        type=\"email\"\n                        required\n                    />\n                    <Input\n                        placeholder={'Location'}\n                        setValue={this.setFormData}\n                        value={location}\n                        name=\"location\"\n                        required\n                    />\n                    <Input\n                        placeholder={'Amount Received'}\n                        setValue={this.setFormData}\n                        value={moneyPaid}\n                        name=\"moneyPaid\"\n                        type=\"number\"\n                        maxLength=\"4\"\n                    />\n                    <Input\n                        placeholder={'With Bhagavad Gita'}\n                        setValue={this.setFormData}\n                        value={withBhagavadGita}\n                        name=\"withBhagavadGita\"\n                        type=\"checkbox\"\n                        required\n                    />\n                    <Input\n                        placeholder={'Registered by'}\n                        setValue={this.setFormData}\n                        value={registeredBy}\n                        name=\"registeredBy\"\n                        type=\"select\"\n                        options={volunteers}\n                        className=\"full input\"\n                        required\n                    />\n                    {registeredBy === 'OTHER' && <Input\n                        placeholder={'Registered by'}\n                        setValue={this.setFormData}\n                        value={registeredBy2}\n                        name=\"registeredBy2\"\n                        required\n                    />}\n                    <Input\n                        placeholder={'Institute'}\n                        setValue={this.setFormData}\n                        value={institute}\n                        name=\"institute\"\n                    />\n                    <Input\n                        placeholder={'Remarks'}\n                        setValue={this.setFormData}\n                        value={remarks}\n                        name=\"remarks\"\n                    />\n                    <RoundBtn\n                        className=\"btn selector-btn\"\n                        onClick={this.register}\n                        outlineColor={COLORS.YELLOW}\n                        textColor={COLORS.WHITE}\n                        bgColor={COLORS.YELLOW}\n                        outlinePt={2}\n                    >\n                        Register\n                    </RoundBtn>\n                    <div className=\"note\">\n                        Please put your full name in <strong>Registered By</strong> field. ISKCON YOUTH FORUM GHAZIABAD holds the right to cancel the registration, if any discrepancies found.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UmangVolunteerContainer;","/home/ravi/Documents/reactProjects/ctk-client/src/components/Footer/index.js",["118","119","120","121","122","123","124","125"],"import React from 'react';\nimport './style.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer-container\">\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d347.6031851377908!2d77.45069463463751!3d28.682340188566755!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x390cf199a672e86f%3A0x93b6a8443203ee20!2sISKCON%20Temple%2C%20Ghaziabad!5e0!3m2!1sen!2sin!4v1607361543505!5m2!1sen!2sin\" width=\"400\" height=\"300\" frameborder=\"0\" style={{ border: '0' }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n                <div className=\"content\">\n                    <div className=\"link-container\">\n                        <div className=\"links\">\n                            <a href=\"https://t.me/IYFGhaziabad\" target=\"_blank\">Connect to Krishna</a>\n                            <a href=\"https://www.facebook.com/media/set/?vanity=IYFGhaziabad&set=a.128262368703002\" target=\"_blank\">Mega Youth Fest 2020</a>\n                            <a href=\"https://udgaar.in/\" target=\"_blank\">UDGAAR Fest 2019</a>\n                            <a href=\"/about\" target=\"_blank\">About Us</a>\n                            <a href=\"/contact-us\" target=\"_blank\">Contact Us</a>\n                            <a href=\"/privacy\" target=\"_blank\">Privacy Policy</a>\n                        </div>\n                        <div className=\"links\">\n                            <a href=\"https://www.facebook.com/IYFGhaziabad\" target=\"_blank\">Facebook</a>\n                            <a href=\"https://t.me/IYFGhaziabad\" target=\"_blank\">Telegram</a>\n                            <a href=\"https://chat.whatsapp.com/JTvafXN6Xto9cgFXdFGkzz\" target=\"_blank\">Whatsapp</a>\n                            <a href=\"mailto:iskconyouthforumghaziabad@gmail.com\" target=\"_blank\">Email</a>\n                        </div>\n                    </div>\n                    <div className=\"copyright\">\n                        &copy; ISKCON YOUTH FORUM GHAZIABAD 2020\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Footer;","/home/ravi/Documents/reactProjects/ctk-client/src/constants/colors.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/containers/UmangRegListContainer/constants.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/services/umang.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/services/index.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/components/Header/index.js",["126"],"/home/ravi/Documents/reactProjects/ctk-client/src/components/RoundBtn/index.js",["127","128","129"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport COLORS from '../../constants/colors';\nimport './style.scss';\n\nclass RoundBtn extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            textColor,\n            bgColor,\n            hoverBgColor,\n            hoverTextColor,\n            outlineColor,\n            outlinePt,\n        } = this.props;\n        this.state = {\n            textColor,\n            bgColor,\n            outlineColor,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            bgColor,\n            textColor,\n        } = this.props;\n        if (prevProps.bgColor !== bgColor || prevProps.textColor !== textColor) {\n            this.setState({\n                bgColor,\n                textColor\n            })\n        }\n    }\n\n    onMouseEnter = () => {\n        const {\n            hoverTextColor,\n            hoverBgColor,\n            hoverOutline,\n        } = this.props;\n        const changed = {};\n        if (hoverBgColor) {\n            changed.bgColor = hoverBgColor;\n        }\n        if (hoverTextColor) {\n            changed.textColor = hoverTextColor;\n        }\n        if (hoverOutline) {\n            changed.outlineColor = hoverOutline;\n        }\n        this.setState(changed);\n    }\n\n    onMouseLeave = () => {\n        const {\n            textColor,\n            bgColor,\n            outlineColor,\n        } = this.props;\n        this.setState({\n            textColor,\n            bgColor,\n            outlineColor,\n        });\n    }\n\n    render() {\n        const {\n            className,\n            children,\n            outlinePt,\n            onClick,\n        } = this.props;\n        const {\n            bgColor,\n            textColor,\n            outlineColor,\n        } = this.state;\n        return (\n            <button\n                onClick={onClick}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                className={`${className} round-btn`}\n                style={{\n                    backgroundColor: bgColor,\n                    color: textColor,\n                    border: `${outlinePt}px solid ${outlineColor}`\n                }}\n            >\n                {children}\n            </button>\n        )\n    }\n}\n\nRoundBtn.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.any,\n    textColor: PropTypes.string,\n    bgColor: PropTypes.string,\n    hoverBgColor: PropTypes.string,\n    hoverTextColor: PropTypes.string,\n    outlineColor: PropTypes.string,\n    outlinePt: PropTypes.number,\n}\n\nRoundBtn.defaultProps = {\n    className: '',\n    children: null,\n    textColor: COLORS.WHITE,\n    bgColor: COLORS.DARK,\n    hoverBgColor: '',\n    hoverTextColor: '',\n    outlineColor: COLORS.DARK,\n    outlinePt: 0,\n}\n\nexport default RoundBtn;","/home/ravi/Documents/reactProjects/ctk-client/src/components/Banner/index.js",[],"/home/ravi/Documents/reactProjects/ctk-client/src/components/Input/index.js",["130","131"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss'\nimport COLORS from '../../constants/colors';\nimport { placeholder } from '@babel/types';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            borderColor: COLORS.DARK,\n        }\n    }\n    onFocusIn = () => {\n        this.setState({\n            borderColor: COLORS.BLACK,\n        })\n    }\n\n    onFocusOut = () => {\n        if (this.checkTests()) {\n            //somethhing error\n            this.setState({\n                borderColor: COLORS.RED\n            });\n        } else {\n            this.setState({\n                borderColor: COLORS.DARK\n            })\n        }\n    }\n\n    checkTests = () => {\n        const {\n            required,\n            test,\n            value,\n        } = this.props;\n        if (required && !value) {\n            return true;\n        } else if (test) {\n            console.log(test, test.test(value), value)\n            return !test.test(value);\n        }\n        return false;\n    }\n    render() {\n        const {\n            value,\n            setValue,\n            required,\n            className,\n            name,\n            placeholder,\n            type,\n            options,\n            maxlength,\n        } = this.props;\n        const {\n            borderColor\n        } = this.state;\n        return (\n            <React.Fragment>\n                {type === 'select' && (\n                    <select\n                        className={`input-container ${className ? className : ''}`}\n                        style={{ borderColor }}\n                        name={name}\n                        value={value === '' ? null : value}\n                        onFocus={this.onFocusIn}\n                        onBlur={this.onFocusOut}\n                        placeholder={placeholder}\n                        onChange={(e) => setValue(name, e.target.value)}\n                    >\n                        <option disabled selected value=\"0\"> Registered By </option>\n                        {options.map(opt => {\n                            return (\n                                <option value={typeof (opt) === 'string' ? opt : opt.value}>\n                                    {typeof (opt) === 'string' ? opt : opt.label}\n                                </option>\n                            )\n                        })}\n                    </select>\n                )}\n                {(type === 'text' || type === 'date' || type === 'number' || type === 'email') && (\n                    <input\n                        className={`input-container ${className ? className : ''}`}\n                        style={{ borderColor }}\n                        name={name}\n                        value={value}\n                        onFocus={this.onFocusIn}\n                        onBlur={this.onFocusOut}\n                        placeholder={placeholder}\n                        onChange={(e) => setValue(name, e.target.value)}\n                        maxlength={maxlength}\n                        type={type}\n                    />\n                )}\n                {(type === 'radio') && (\n                    <div className=\"radio\">\n                        {\n                            options.map((option, index) => (\n                                <div className={className}>\n                                    <input\n                                        className={`input-container`}\n                                        name={name}\n                                        value={option}\n                                        onChange={(e) => setValue(name, e.target.value)}\n                                        type={type}\n                                        checked={option === value}\n                                    />\n                                    <label for={name}>{option}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                )}\n                {(type === 'checkbox') && (\n                    <div className=\"checkbox\">\n                        <input\n                            className={`input-container ${className ? className : ''}`}\n                            style={{ display: \"inline-block\", width: \"fit-content\" }}\n                            name={name}\n                            checked={value}\n                            onChange={(e) => setValue(name, e.target.checked)}\n                            type={type}\n                        />\n                        <label>{placeholder}</label>\n                    </div>\n                )}\n                {(type === 'file') && (\n                    <button id=\"upload_widget\" class=\"cloudinary-button\">Upload files</button>\n                )}\n            </React.Fragment >\n\n        )\n    }\n}\n\nInput.propTypes = {\n    type: PropTypes.string,\n};\n\nInput.defaultProps = {\n    type: 'text',\n}\n\nexport default Input;",{"ruleId":"132","severity":1,"message":"133","line":128,"column":25,"nodeType":"134","endLine":128,"endColumn":67},{"ruleId":"132","severity":1,"message":"133","line":182,"column":29,"nodeType":"134","endLine":182,"endColumn":70},{"ruleId":"132","severity":1,"message":"133","line":191,"column":25,"nodeType":"134","endLine":191,"endColumn":171},{"ruleId":"132","severity":1,"message":"133","line":207,"column":37,"nodeType":"134","endLine":207,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":218,"column":37,"nodeType":"134","endLine":218,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":227,"column":37,"nodeType":"134","endLine":227,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":238,"column":37,"nodeType":"134","endLine":238,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":247,"column":37,"nodeType":"134","endLine":247,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":285,"column":29,"nodeType":"134","endLine":285,"endColumn":74},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"132","severity":1,"message":"133","line":127,"column":29,"nodeType":"134","endLine":127,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":134,"column":29,"nodeType":"134","endLine":134,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":141,"column":29,"nodeType":"134","endLine":141,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":148,"column":29,"nodeType":"134","endLine":148,"endColumn":47},{"ruleId":"139","severity":1,"message":"140","line":158,"column":21,"nodeType":"134","endLine":158,"endColumn":240},{"ruleId":"132","severity":1,"message":"133","line":200,"column":29,"nodeType":"134","endLine":200,"endColumn":124},{"ruleId":"141","severity":1,"message":"142","line":2,"column":21,"nodeType":"143","messageId":"144","endLine":2,"endColumn":32},{"ruleId":"141","severity":1,"message":"145","line":2,"column":34,"nodeType":"143","messageId":"144","endLine":2,"endColumn":41},{"ruleId":"146","severity":1,"message":"147","line":124,"column":13,"nodeType":"148","messageId":"149","endLine":124,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":190,"column":21,"nodeType":"134","endLine":190,"endColumn":104},{"ruleId":"152","severity":1,"message":"153","line":19,"column":25,"nodeType":"134","messageId":"154","endLine":20,"endColumn":45,"fix":"155"},{"ruleId":"152","severity":1,"message":"153","line":45,"column":53,"nodeType":"134","messageId":"154","endLine":45,"endColumn":117,"fix":"156"},{"ruleId":"132","severity":1,"message":"133","line":50,"column":29,"nodeType":"134","endLine":50,"endColumn":121},{"ruleId":"132","severity":1,"message":"133","line":121,"column":25,"nodeType":"134","endLine":121,"endColumn":104},{"ruleId":"152","severity":1,"message":"153","line":142,"column":25,"nodeType":"134","messageId":"154","endLine":144,"endColumn":50,"fix":"157"},{"ruleId":"141","severity":1,"message":"158","line":55,"column":13,"nodeType":"143","messageId":"144","endLine":55,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":8,"column":17,"nodeType":"134","endLine":8,"endColumn":432},{"ruleId":"152","severity":1,"message":"153","line":12,"column":29,"nodeType":"134","messageId":"154","endLine":12,"endColumn":81,"fix":"159"},{"ruleId":"152","severity":1,"message":"153","line":13,"column":29,"nodeType":"134","messageId":"154","endLine":13,"endColumn":133,"fix":"160"},{"ruleId":"152","severity":1,"message":"153","line":14,"column":29,"nodeType":"134","messageId":"154","endLine":14,"endColumn":74,"fix":"161"},{"ruleId":"152","severity":1,"message":"153","line":20,"column":29,"nodeType":"134","messageId":"154","endLine":20,"endColumn":93,"fix":"162"},{"ruleId":"152","severity":1,"message":"153","line":21,"column":29,"nodeType":"134","messageId":"154","endLine":21,"endColumn":81,"fix":"163"},{"ruleId":"152","severity":1,"message":"153","line":22,"column":29,"nodeType":"134","messageId":"154","endLine":22,"endColumn":104,"fix":"164"},{"ruleId":"152","severity":1,"message":"153","line":23,"column":29,"nodeType":"134","messageId":"154","endLine":23,"endColumn":98,"fix":"165"},{"ruleId":"132","severity":1,"message":"133","line":54,"column":39,"nodeType":"134","endLine":54,"endColumn":74},{"ruleId":"141","severity":1,"message":"166","line":12,"column":13,"nodeType":"143","messageId":"144","endLine":12,"endColumn":25},{"ruleId":"141","severity":1,"message":"167","line":13,"column":13,"nodeType":"143","messageId":"144","endLine":13,"endColumn":27},{"ruleId":"141","severity":1,"message":"168","line":15,"column":13,"nodeType":"143","messageId":"144","endLine":15,"endColumn":22},{"ruleId":"141","severity":1,"message":"169","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":21},{"ruleId":"141","severity":1,"message":"170","line":51,"column":13,"nodeType":"143","messageId":"144","endLine":51,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-unused-vars","'createTheme' is defined but never used.","Identifier","unusedVar","'memoize' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"173","text":"174"},{"range":"175","text":"174"},{"range":"176","text":"174"},"'volunteers' is assigned a value but never used.",{"range":"177","text":"174"},{"range":"178","text":"174"},{"range":"179","text":"174"},{"range":"180","text":"174"},{"range":"181","text":"174"},{"range":"182","text":"174"},{"range":"183","text":"174"},"'hoverBgColor' is assigned a value but never used.","'hoverTextColor' is assigned a value but never used.","'outlinePt' is assigned a value but never used.","'placeholder' is defined but never used.","'required' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1414,1414]," rel=\"noreferrer\"",[2958,2958],[9708,9708],[832,832],[987,987],[1085,1085],[1514,1514],[1607,1607],[1723,1723],[1833,1833]]